services:
  db:
    image: postgres:15
    container_name: artist_postgres
    restart: always
    environment:
      POSTGRES_USER: artist
      POSTGRES_PASSWORD: artistpwd
      POSTGRES_DB: artistdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
<<<<<<< HEAD
      test: ["CMD-SHELL", "pg_isready -U artist -d artistdb"]
      interval: 5s
      timeout: 5s
      retries: 20
=======
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 2s
      timeout: 2s
      retries: 30
>>>>>>> 54f8d4d (compose: add db healthcheck and depends_on condition; remove version key)

  backend:
    build: ./apps/backend
    container_name: artist_backend
<<<<<<< HEAD
    working_dir: /app
    # важно: alembic перед uvicorn и ожидание готовности БД
    command: >
      sh -c "
        alembic -c /app/alembic.ini upgrade head &&
        exec uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
=======
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    working_dir: /app
>>>>>>> 54f8d4d (compose: add db healthcheck and depends_on condition; remove version key)
    volumes:
      - ./apps/backend:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+psycopg2://artist:artistpwd@db:5432/artistdb
      PYTHONUNBUFFERED: "1"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
